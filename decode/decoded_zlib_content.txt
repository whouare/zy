exec(base64.b64decode('exec(base64.b64decode('IyDlj5jph494bGNrICDmjaLooYzliIblvIAgICAg5oqT5Y+WaHR0cHM6Ly9hMmFldjIuaDUuc2FneC5uZXQvYXBpLXVzZXIvdjIvZ2V0VG9rZW7ln5/lkI3kuIvnmoR3eF9vcGVuaWQKIyDlj5jph494bGlkICAgIOavj+WkqeiHquW3seaKk+WPlgojIOWPmOmHj3hsaG9zdCAg5Z+f5ZCN5Y+v6IO95Lya5Y+Y5o2iICDlvZPlj5jmjaLnmoTml7blgJnoh6rlt7Hmm7TmlLnln5/lkI0gIOW9k+WJjeWfn+WQjSBhMmFldjIuaDUuc2FneC5uZXQKIyDmr4/lpKnlrprml7bkuIDmrKHml6Llj68gIOWkmuS6huWPr+iDveS8muaKpemUmSAg562J5pyJ6Zeu6aKY5Zyo5L+u5pS5CgojIGhvc3QgPSAiYTJhZXYyLmg1LnNhZ3gubmV0IgoKaW1wb3J0IHRpbWUKaW1wb3J0IG9zCmltcG9ydCByZXF1ZXN0cwppbXBvcnQganNvbgoKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCB1cmxsaWIzCgp1cmxsaWIzLmRpc2FibGVfd2FybmluZ3ModXJsbGliMy5leGNlcHRpb25zLkluc2VjdXJlUmVxdWVzdFdhcm5pbmcpCgp0b2tlbl9saXN0ID0gb3MuZW52aXJvbi5nZXQoInhsY2siKS5zcGxpdCgiXG4iKQp4bGlkID0gb3MuZW52aXJvbi5nZXQoInhsaWQiKQpob3N0ID0gb3MuZW52aXJvbi5nZXQoInhsaG9zdCIpCm51bV90b2tlbnMgPSBsZW4odG9rZW5fbGlzdCkKcHJpbnQoIuW9k+WJjeiOt+WPluWIsCIsIG51bV90b2tlbnMsICLkuKrotKblj7cgXG4iKQpuID0gMAppZiB0b2tlbl9saXN0IG9yIHhsaWQgb3IgaG9zdDoKICAgIHByaW50KCLlj5jph4/ojrflj5bmiJDlip8iKQplbHNlOgogICAgcHJpbnQoIuS4jeWhq+WPmOmHj+eOqeS4quibiyIpCiAgICBleGl0KCkKZm9yIHRva2VuIGluIHRva2VuX2xpc3Q6CiAgICBpZCA9IHhsaWQKICAgIGNvZGUgPSAiMDUxSU16bGwyd0RKT2U0Vnh3bWwyRHBOMmQxSU16bFgiCiAgICBuICs9IDEKICAgIHByaW50KGYi56yse2595Liq6LSm5Y+35omn6KGM5LitIikKICAgICMgcHJpbnQodG9rZW5fanNvbikKICAgIG9wZW5pZCA9IHRva2VuCiAgICBoZWFkZXJzID0geyJIb3N0IjogZiJ7aG9zdH0iLCAiQ29ubmVjdGlvbiI6ICJrZWVwLWFsaXZlIiwgIkNvbnRlbnQtTGVuZ3RoIjogIjg0IiwgIlVzZXItQWdlbnQiOiAiTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyMi4wLjAuMCBTYWZhcmkvNTM3LjM2IE5ldFR5cGUvV0lGSSBNaWNyb01lc3Nlbmdlci83LjAuMjAuMTc4MSgweDY3MDAxNDNCKSBXaW5kb3dzV2VjaGF0KDB4NjMwOTBjMTEpIFhXRUIvMTE1ODEgRmx1ZSIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsICJBY2NlcHQiOiAiKi8qIiwgIk9yaWdpbiI6IGYiaHR0cHM6Ly97aG9zdH0iLCAiU2VjLUZldGNoLVNpdGUiOiAic2FtZS1vcmlnaW4iLCAiU2VjLUZldGNoLU1vZGUiOiAiY29ycyIsICJTZWMtRmV0Y2gtRGVzdCI6ICJlbXB0eSIsICJSZWZlcmVyIjogZiJodHRwczovL3tob3N0fS9hY3Rpdml0eS9pbmRleC5odG1sP2lkPXtpZH0mY29kZT0wJnN0YXRlPVNUQVRFIiwgIkFjY2VwdC1FbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlLCBiciIsICJBY2NlcHQtTGFuZ3VhZ2UiOiAiemgtQ04semg7cT0wLjkifQogICAgdXJsID0gZiJodHRwczovL3tob3N0fS9hcGktdXNlci92Mi9nZXRUb2tlbiIKICAgIGRhdGEgPSB7Ind4X29wZW5pZCI6IG9wZW5pZCwgImlkIjogaWR9CiAgICBkYXRhID0ganNvbi5kdW1wcyhkYXRhLCBzZXBhcmF0b3JzPSgnLCcsICc6JykpCiAgICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QodXJsLCBoZWFkZXJzPWhlYWRlcnMsIGRhdGE9ZGF0YSwgdmVyaWZ5PUZhbHNlKQogICAgaWYgcmVzcG9uc2Uuc3RhdHVzX2NvZGUgPT0gMjAwOgogICAgICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpCiAgICAgICAgdG9rZW4gPSByZXNwb25zZVsiZGF0YSJdWyJ0b2tlbiJdCiAgICAgICAgcHJpbnQoZiJ0b2tlbuiOt+WPluaIkOWKn++8jHRva2Vu5Li6e3Rva2VufSIpCiAgICBlbHNlOgogICAgICAgIHByaW50KCLloavlhpnkv6Hmga/plJnor68iKQogICAgICAgIGNvbnRpbnVlCgogICAgaGVhZGVycyA9IHsiSG9zdCI6IGYie2hvc3R9IiwgIkNvbm5lY3Rpb24iOiAia2VlcC1hbGl2ZSIsICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIsICJBdXRob3JpemF0aW9uIjogZiJCZWFyZXIge3Rva2VufSIsICJVc2VyLUFnZW50IjogIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMjIuMC4wLjAgU2FmYXJpLzUzNy4zNiBOZXRUeXBlL1dJRkkgTWljcm9NZXNzZW5nZXIvNy4wLjIwLjE3ODEoMHg2NzAwMTQzQikgV2luZG93c1dlY2hhdCgweDYzMDkwYzExKSBYV0VCLzExNTgxIEZsdWUiLCAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLCAiU2VjLUZldGNoLVNpdGUiOiAic2FtZS1vcmlnaW4iLCAiU2VjLUZldGNoLU1vZGUiOiAiY29ycyIsICJTZWMtRmV0Y2gtRGVzdCI6ICJlbXB0eSIsICJSZWZlcmVyIjogZiJodHRwczovL3tob3N0fS9hY3Rpdml0eS9pbmRleC5odG1sP2lkPXtpZH0mY29kZT0wJnN0YXRlPVNUQVRFIiwgIkFjY2VwdC1FbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlLCBiciIsICJBY2NlcHQtTGFuZ3VhZ2UiOiAiemgtQ04semg7cT0wLjkifQogICAgdXJsID0gZiJodHRwczovL3tob3N0fS9hcGktdXNlci92Mi9hY3Rpdml0eURldGF0aWwiCiAgICBwYXJhbXMgPSB7ImlkIjogaWQsICJ3aXRoTWF0ZXJpYWwiOiAiMSJ9CgoKICAgIGRlZiBmaW5kX3Jlc3VsdF9vbmUoZGF0YSk6CiAgICAgICAgZm9yIGluZGV4LCBpdGVtIGluIGVudW1lcmF0ZShkYXRhKTogICMg5L2/55SoIGVudW1lcmF0ZSDlh73mlbDlkIzml7bojrflj5blhYPntKDnmoTntKLlvJXlkozlhYPntKDmnKzouqsKICAgICAgICAgICAgaWYgaXRlbS5nZXQoJ3Jlc3VsdCcpID09ICcxJzogICMg5L2/55SoIGdldCDmlrnms5Xojrflj5YgcmVzdWx0IOmUrueahOWAvAogICAgICAgICAgICAgICAgcmV0dXJuIGluZGV4LCBpdGVtCiAgICAgICAgcmV0dXJuIE5vbmUsIE5vbmUKCgogICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5nZXQodXJsLCBoZWFkZXJzPWhlYWRlcnMsIHBhcmFtcz1wYXJhbXMsIHZlcmlmeT1GYWxzZSkKICAgIGlmIHJlc3BvbnNlLnN0YXR1c19jb2RlID09IDIwMDoKICAgICAgICByZXNwb25zZSA9IHJlc3BvbnNlLmpzb24oKQogICAgICAgICMgcHJpbnQocmVzcG9uc2UpCiAgICAgICAgdXNlckFjdGl2aXR5SWQgPSByZXNwb25zZVsibWV0YSJdWyJqb2luSW5mbyJdWyJ1c2VyQWN0aXZpdHlJZCJdCiAgICAgICAgYWN0aXZpdHlfaWQgPSByZXNwb25zZVsiZGF0YSJdWyJhY3Rpdml0eV9pZCJdCiAgICAgICAgIyBwcmludChhY3Rpdml0eV9pZCkKICAgICAgICBkYWFuMTEgPSByZXNwb25zZVsiZGF0YSJdWyJtYXRlcmlhbERldGFpbCJdWyJxdWVzdGlvbnMiXVswXVsiYW5zd2VyIl0KICAgICAgICAjIHByaW50KGRhYW4xMSkKICAgICAgICBpbmRleCwgaXRlbSA9IGZpbmRfcmVzdWx0X29uZShkYWFuMTEpCiAgICAgICAgIyBwcmludChmIue7k+aenOS4uiAxIOeahOWFg+e0oOe0ouW8leaYrzoge2luZGV4fSwg5YWD57Sg5pivOiB7aXRlbX0iKQogICAgICAgIGRhYW4xID0gZiIwX3tpbmRleH0iCiAgICAgICAgcHJpbnQoZGFhbjEpCiAgICAgICAgcXVlc3Rpb25zID0gcmVzcG9uc2UuZ2V0KCJkYXRhIiwge30pLmdldCgibWF0ZXJpYWxEZXRhaWwiLCB7fSkuZ2V0KCJxdWVzdGlvbnMiLCBbXSkKICAgICAgICBpZiBsZW4ocXVlc3Rpb25zKSA+IDEgYW5kIHF1ZXN0aW9uc1sxXToKICAgICAgICAgICAgIyDov5nph4zmmK/mu6HotrPmnaHku7bml7bnmoTmk43kvZwKICAgICAgICAgICAgZGFhbjEyID0gcmVzcG9uc2VbImRhdGEiXVsibWF0ZXJpYWxEZXRhaWwiXVsicXVlc3Rpb25zIl1bMV1bImFuc3dlciJdCiAgICAgICAgICAgIGluZGV4LCBpdGVtID0gZmluZF9yZXN1bHRfb25lKGRhYW4xMikKICAgICAgICAgICAgZGFhbjIgPSBmIjFfe2luZGV4fSIKICAgICAgICAgICAgcHJpbnQoZGFhbjIpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgZGFhbjIgPSAiIgoKICAgIGVsc2U6CiAgICAgICAgcHJpbnQoIuiOt+WPluetlOahiOmUmeivryIpCiAgICAgICAgY29udGludWUKCgogICAgZGVmIHN1aWppc2Vjb25nKCk6CiAgICAgICAgc3VpamlzaHUgPSBucC5yYW5kb20ucmFuZGludCgzNzAwLCA1NjAwKQogICAgICAgIHJldHVybiBzdWlqaXNodQoKCiAgICB0aW1lX3VybCA9IGYiaHR0cHM6Ly97aG9zdH0vYXBpLXVzZXIvdjEvYWN0aXZpdHlXYXRjaFZpZGVvIgogICAgdGltZV9kYXRhID0geyJ1c2VyQWN0aXZpdHlJZCI6IHVzZXJBY3Rpdml0eUlkLCAic2Vjb25kIjogc3VpamlzZWNvbmcoKSAgIyDorr7nva7kuIDkuKrlvojlpKfnmoTmkq3mlL7ml7bpl7QKICAgICAgICAgICAgICAgICB9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QodGltZV91cmwsIGpzb249dGltZV9kYXRhLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkuanNvbigpCiAgICBpZiByZXNwb25zZVsnc3RhdHVzJ10gPT0gInN1Y2Nlc3MiOgogICAgICAgIHByaW50KCLml7bpl7TkuIrmiqXmiJDlip8iKQogICAgZWxzZToKICAgICAgICBwcmludCgi6ZSZ6K+vIikKICAgICAgICBjb250aW51ZQoKICAgIGZpbmlzaF91cmwgPSBmImh0dHBzOi8ve2hvc3R9L2FwaS11c2VyL3YxL2FjdGl2aXR5V2F0Y2hWaWRlb092ZXIiCiAgICBmaW5pc2hfZGF0YSA9IHsidXNlckFjdGl2aXR5SWQiOiB1c2VyQWN0aXZpdHlJZH0KCiAgICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QoZmluaXNoX3VybCwganNvbj1maW5pc2hfZGF0YSwgaGVhZGVycz1oZWFkZXJzLCB2ZXJpZnk9RmFsc2UpLmpzb24oKQogICAgIyBwcmludChyZXNwb25zZSkKICAgIGlmIHJlc3BvbnNlWydzdGF0dXMnXSA9PSAic3VjY2VzcyI6CiAgICAgICAgcHJpbnQoIuaXtumXtOiuvue9ruaIkOWKnyIpCiAgICBlbHNlOgogICAgICAgIHByaW50KCLplJnor68iKQogICAgICAgIGNvbnRpbnVlCgogICAgaGVhZGVycyA9IHsiSG9zdCI6IGYie2hvc3R9IiwgIkNvbm5lY3Rpb24iOiAia2VlcC1hbGl2ZSIsICJDb250ZW50LUxlbmd0aCI6ICI0NiIsICJzZWMtY2gtdWEtcGxhdGZvcm0iOiAiXCJBbmRyb2lkXCIiLCAiQXV0aG9yaXphdGlvbiI6IGYiQmVhcmVyIHt0b2tlbn0iLCAiVXNlci1BZ2VudCI6ICJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTQ7IDIzMTFEUks0OEMgQnVpbGQvVVAxQS4yMzA5MDUuMDExOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzEzMC4wLjY3MjMuMTAzIE1vYmlsZSBTYWZhcmkvNTM3LjM2IFhXRUIvMTMwMDI1OSBNTVdFQlNESy8yMDI0MTEwMyBNTVdFQklELzk2NTQgTWljcm9NZXNzZW5nZXIvOC4wLjU1LjI3ODAoMHgyODAwMzczNCkgV2VDaGF0L2FybTY0IFdlaXhpbiBOZXRUeXBlLzRHIExhbmd1YWdlL3poX0NOIEFCSS9hcm02NCIsICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIsICJzZWMtY2gtdWEiOiAiXCJDaHJvbWl1bVwiO3Y9XCIxMzBcIiwgXCJBbmRyb2lkIFdlYlZpZXdcIjt2PVwiMTMwXCIsIFwiTm90P0FfQnJhbmRcIjt2PVwiOTlcIiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsICJzZWMtY2gtdWEtbW9iaWxlIjogIj8xIiwgIk9yaWdpbiI6IGYiaHR0cHM6Ly97aG9zdH0iLCAiWC1SZXF1ZXN0ZWQtV2l0aCI6ICJjb20udGVuY2VudC5tbSIsICJTZWMtRmV0Y2gtU2l0ZSI6ICJzYW1lLW9yaWdpbiIsICJTZWMtRmV0Y2gtTW9kZSI6ICJjb3JzIiwgIlNlYy1GZXRjaC1EZXN0IjogImVtcHR5IiwgIlJlZmVyZXIiOiBmImh0dHBzOi8ve2hvc3R9L2FjdGl2aXR5L2luZGV4Lmh0bWw/aWQ9e2lkfSIsICJBY2NlcHQtRW5jb2RpbmciOiAiZ3ppcCwgZGVmbGF0ZSwgYnIsIHpzdGQiLCAiQWNjZXB0LUxhbmd1YWdlIjogInpoLUNOLHpoO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43In0KICAgIHVybCA9IGYiaHR0cHM6Ly97aG9zdH0vYXBpLXVzZXIvdjEvcmVjZWl2ZUF3YXJkQW5kV2F0Y2hPdmVyIgogICAgaWYgZGFhbjIgIT0gIiI6CiAgICAgICAgZGF0YSA9IHsiYWN0aXZpdHlfaWQiOiBhY3Rpdml0eV9pZCwgImFuc3dlcnMiOiBbZiJ7ZGFhbjF9IiwgZiJ7ZGFhbjJ9Il19CiAgICBlbHNlOgogICAgICAgIGRhdGEgPSB7ImFjdGl2aXR5X2lkIjogYWN0aXZpdHlfaWQsICJhbnN3ZXJzIjogW2Yie2RhYW4xfSJdfQogICAgZGF0YSA9IGpzb24uZHVtcHMoZGF0YSwgc2VwYXJhdG9ycz0oJywnLCAnOicpKQogICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5wb3N0KHVybCwgaGVhZGVycz1oZWFkZXJzLCBkYXRhPWRhdGEsIHZlcmlmeT1GYWxzZSkuanNvbigpCiAgICBpZiByZXNwb25zZVsnc3RhdHVzX2NvZGUnXSA9PSAyMDA6CiAgICAgICAgcmVkX21vbmV5ID0gcmVzcG9uc2VbImRhdGEiXVsicmVkX21vbmV5Il0KICAgICAgICBwcmludChmIuetlOmimOaIkOWKn++8jOiOt+W+l+WlluWKsXtyZWRfbW9uZXl9IikKICAgICAgICB0aW1lLnNsZWVwKDE1KQogICAgZWxzZToKICAgICAgICBtc2cgPSByZXNwb25zZVsibWVzc2FnZSJdCiAgICAgICAgcHJpbnQoIuetlOmimOWksei0pSIpCiAgICAgICAgcHJpbnQobXNnKQogICAgICAgIHRpbWUuc2xlZXAoMTApCiAgICAgICAgY29udGludWUK').decode('utf-8'))').decode('utf-8'))