import bz2
import base64

# 提取并解码base64部分
encoded_data =     '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'


# 解密
# 解密 bz2.decompress(base64.b64decode("xxx")))
try:
    # 解码base64
    decoded_data = base64.b64decode(encoded_data)

    # 解压缩bz2
    decompressed_data = bz2.decompress(decoded_data)

    # 转换为字符串并打印
    source_code = decompressed_data.decode('utf-8')
    print("解密后的源代码:")
    print(source_code)

    # 保存到文件以便查看
    with open('decoded_source.py', 'w', encoding='utf-8') as f:
        f.write(source_code)
    print("\n源代码已保存到 decoded_source.py")

except Exception as e:
    print(f"解密过程中出错: {e}")
#
# import bz2, base64, zlib, lzma
#
# exec(bz2.decompress(base64.b64decode(
# )))
#